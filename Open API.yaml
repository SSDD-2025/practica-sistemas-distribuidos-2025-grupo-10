openapi: 3.1.0
info:
  title: OpenAPI definition
  version: v0
servers:
- url: https://localhost:8443
  description: Generated server url
paths:
  /api/products/{id}:
    get:
      tags:
      - product-rest-controller
      operationId: getProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
    put:
      tags:
      - product-rest-controller
      operationId: updateProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
    delete:
      tags:
      - product-rest-controller
      operationId: deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/ProductDTO"
  /api/products/{id}/image:
    get:
      tags:
      - product-rest-controller
      operationId: getProductImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    put:
      tags:
      - product-rest-controller
      operationId: updateProductImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - product-rest-controller
      operationId: createProductImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                imageFile:
                  type: string
                  format: binary
              required:
              - imageFile
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - product-rest-controller
      operationId: deleteProductImage
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/register:
    post:
      tags:
      - user-rest-controller
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/NewUserRequestDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/cartToOrder:
    post:
      tags:
      - user-rest-controller
      operationId: addCartToOrder
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/cart/{productId}:
    post:
      tags:
      - user-rest-controller
      operationId: addproductToCart
      parameters:
      - name: productId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/products:
    get:
      tags:
      - product-rest-controller
      operationId: getProducts
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    post:
      tags:
      - product-rest-controller
      operationId: createProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ProductDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/categories:
    get:
      tags:
      - category-rest-controller
      operationId: getCategories
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryDTO"
    post:
      tags:
      - category-rest-controller
      operationId: createCategory
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CategoryDTO"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/auth/refresh:
    post:
      tags:
      - login-rest-controller
      operationId: refreshToken
      parameters:
      - name: RefreshToken
        in: cookie
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/logout:
    post:
      tags:
      - login-rest-controller
      operationId: logOut
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/auth/login:
    post:
      tags:
      - login-rest-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/LoginRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/AuthResponse"
  /api/users:
    get:
      tags:
      - user-rest-controller
      operationId: getAllUsers
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/me:
    get:
      tags:
      - user-rest-controller
      operationId: me
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/UserDTO"
  /api/users/me/myOrders:
    get:
      tags:
      - user-rest-controller
      operationId: getMyOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
      - user-rest-controller
      operationId: deleteMyOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/users/me/myCart:
    get:
      tags:
      - user-rest-controller
      operationId: getMyCart
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /api/products/short:
    get:
      tags:
      - product-rest-controller
      operationId: getShortPaginated
      parameters:
      - name: page
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      - name: size
        in: query
        required: false
        schema:
          type: integer
          format: int32
          default: 10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageProductDTO"
  /api/orders:
    get:
      tags:
      - order-rest-controller
      operationId: getOrders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderDTO"
  /api/orders/{id}:
    get:
      tags:
      - order-rest-controller
      operationId: getOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
    delete:
      tags:
      - order-rest-controller
      operationId: deleteOrder
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/OrderDTO"
  /api/categories/{id}:
    get:
      tags:
      - category-rest-controller
      operationId: getCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CategoryDTO"
    delete:
      tags:
      - category-rest-controller
      operationId: deleteCategory
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/CategoryDTO"
  /api/categories/{categoryId}/products:
    get:
      tags:
      - product-rest-controller
      operationId: getProductsByCategoryPaginated
      parameters:
      - name: categoryId
        in: path
        required: true
        schema:
          type: integer
          format: int64
      - name: pageable
        in: query
        required: true
        schema:
          $ref: "#/components/schemas/Pageable"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: "#/components/schemas/PageProductDTO"
  /api/users/{id}:
    delete:
      tags:
      - user-rest-controller
      operationId: deleteUser
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    CategoryDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    ProductDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        price:
          type: number
        image:
          type: boolean
        category:
          $ref: "#/components/schemas/CategoryDTO"
    NewUserRequestDTO:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
        password:
          type: string
    AuthResponse:
      type: object
      properties:
        status:
          type: string
          enum:
          - SUCCESS
          - FAILURE
        message:
          type: string
        error:
          type: string
    LoginRequest:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    OrderDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        total:
          type: number
        numItems:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        status:
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/ProductDTO"
    UserDTO:
      type: object
      properties:
        id:
          type: integer
          format: int64
        username:
          type: string
        email:
          type: string
        roles:
          type: array
          items:
            type: string
        userProducts:
          type: array
          items:
            $ref: "#/components/schemas/ProductDTO"
        userOrders:
          type: array
          items:
            $ref: "#/components/schemas/OrderDTO"
    PageProductDTO:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: "#/components/schemas/ProductDTO"
        number:
          type: integer
          format: int32
        sort:
          $ref: "#/components/schemas/SortObject"
        numberOfElements:
          type: integer
          format: int32
        first:
          type: boolean
        last:
          type: boolean
        pageable:
          $ref: "#/components/schemas/PageableObject"
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: "#/components/schemas/SortObject"
        paged:
          type: boolean
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        unpaged:
          type: boolean
    SortObject:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    Pageable:
      type: object
      properties:
        page:
          type: integer
          format: int32
          minimum: 0
        size:
          type: integer
          format: int32
          minimum: 1
        sort:
          type: array
          items:
            type: string
